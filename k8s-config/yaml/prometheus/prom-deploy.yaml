apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      component: server
    # matchExpressions:
    #   - {key: app, operator: In, values: [prometheus]}
    #   - {key: component, operator: In, values: [server]}
    template:
      metadata:
        labels:
          app: prometheus
          component: server
        annotations:
          prometheus.io/scrape: 'false'
      spec:
        nodeName: 172.31.7.113
        serviceAccountName: monitor
        containers:
          - name: prometheus
            image: prom/prometheus:v2.31.2
            imagePullPorlicy: IfNotPresent
            command:
              - prometheus
              - --config.file=/etc/prometheus/prometheus.yaml
              - --storage.tsdb.path=/prometheus
              - --storage.tsdb.retention=720h
            ports:
              - containerPort: 9090
                protocol: TCP
            volumeMounts:
              - name: prometheus-config
                mountPath: /etc/prometheus/prometheus.yaml
                subPath: prometheus.yaml
              - name: prometheus-storage-volume
                mountPath: /prometheus
            volumes:
              - name: prometheus-config
                configMap:
                  name: prometheus-config
                  items:
                    - key: prometheus.yaml
                      path: prometheus.yaml
                      mode: 0644
              - name: prometheus-storage-volume
                # 可以改成网络存储
                hostPath:
                  path: /data/prometheus-data
                  type: Diretory


# 创建监控账号
# kubectl create serviceaccount monitor -n monitoring
# 管理员权限慎用
# kubectl create clusterrolebinding monitor-clusterrolebinding \
# -n monitoring --clusterrole=cluster-admin --serviceaccount=monitoring:monitor